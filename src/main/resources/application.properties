server.port=8090

# Usar los nombres de los servicios en lugar de la IP
# Fallecidos API
#api.fallecidos.service=http://nuestrosparques-api-fallecidos:8081/api/fallecidos
#api.obituario.service=http://nuestrosparques-api-obituario:8082/api/obituario
#api.encargados.service=http://nuestrosparques-api-encargados:8083/api/encargados
#api.uf.service=http://nuestrosparques-api-uf:8084/api/uf
#api.boleta.service=http://nuestrosparques-api-boleta:8085/api/boleta
#api.qr.service=http://nuestrosparques-api-qr:8086/api/qr
#api.contrato.service=http://nuestrosparques-api-contratos:8087/api/v1/contract
#api.portalplus.service=http://nuestrosparques-portplus-be:8088/api/encargados/portal-plus
#api.pagos.service=http://nuestrosparques-api-pagos:8089/pagos

# Configuración de la base de datos
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password

# Comentarios explicativos
# En lugar de usar la IP 172.17.0.1 para acceder a otros servicios,
# se utilizan los nombres de los servicios definidos en el archivo docker-compose.yml.
# Docker Compose proporciona una red interna que permite a los contenedores
# comunicarse entre sí utilizando estos nombres de servicio.

#server.port=8090
#Fallecidos API
api.fallecidos.service=http://172.17.0.1:8081/api/fallecidos
api.obituario.service=http://172.17.0.1:8082/api/obituario
api.encargados.service=http://172.17.0.1:8083/api/encargados
api.uf.service=http://172.17.0.1:8084/api/uf
api.boleta.service=http://172.17.0.1:8085/api/boleta
api.qr.service=http://172.17.0.1:8086/api/qr
api.contrato.service=http://172.17.0.1:8087/api/v1/contract
api.portalplus.service=http://172.17.0.1:8088/api/encargados/portal-plus
api.pagos.service=http://172.17.0.1:8089/pagos

#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=password


